name: nr-nmp
services:
  database:
    container_name: nr-nmp-db
    image: postgres:15.7
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./database/postgres/data/db:/data/db
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER} || exit 1']
      interval: 5s
      timeout: 3s
    networks:
      - nmp

  # Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    # command: npm run ${CMD:-dev}
    container_name: nr-nmp-api
    depends_on:
      database:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./backend/
          target: app
          ignore: [node_modules]
    env_file:
      - .env
    healthcheck:
      test: curl localhost:3000/api/health | grep 'NMP API is healthy and ready!'
    ports: [3000:3000]
    volumes:
      - ./backend:/app
    networks:
      - nmp

  # Frontend
  frontend:
    image: node:20.17.0
    command: /bin/bash -c "cd ./app && npm install && npm run ${CMD:-dev}"
    container_name: nr-nmp-frontend
    depends_on:
      backend:
        condition: service_healthy
    env_file: .env
    environment:
      VITE_BACKEND_URL: http://localhost:3000
    healthcheck:
      test: curl --fail http://localhost:5173 || exit 1
    ports: ["5173:5173"]
    volumes: ["./frontend:/app", "/app/node_modules"]
    networks:
      - nmp

  caddy:
    container_name: caddy
    profiles: ["caddy"]
    build: ./frontend
    environment:
      NODE_ENV: development
      PORT: 3000
      BACKEND_URL: http://backend:3000
      LOG_LEVEL: info
    ports: ["3005:3000"]
    volumes: ["./frontend/Caddyfile:/etc/caddy/Caddyfile"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005"]
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - nmp
volumes:
  postgres-data:

networks:
  nmp:
    name: nmp-net
    driver: bridge
