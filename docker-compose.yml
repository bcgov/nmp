# Reusable vars
x-var:
  - &POSTGRES_USER
    postgres

# Postgres envars
x-postgres-vars: &postgres-vars
  POSTGRES_DATABASE: postgres
  POSTGRES_HOST: nr-nmp-db
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: *POSTGRES_USER

name: nr-nmp
services:
  # Database
  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: nr-nmp-db
    volumes:
      - ./database/data/:/var/lib/postgresql/data
    environment:
      <<: *postgres-vars
    ports: [5432:5432]
    healthcheck:
      test: ["CMD", "pg_isready", "-U", *POSTGRES_USER]

  # Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: nr-nmp-api
    command: python manage.py runserver 0.0.0.0:3000
    volumes:
      - ./backend:/app
    ports:
      - "3000:3000"
    depends_on:
      - database
    healthcheck:
     test: curl --fail http://localhost:3000 || exit 1

  # Frontend
  frontend:
    image: node:20.17.0
    command: /bin/bash -c "cd ./app && npm install && npm run ${CMD:-dev}"
    container_name: nr-nmp-frontend
    depends_on:
      backend:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore: [node_modules]
    env_file: .env
    environment:
      VITE_BACKEND_URL: http://localhost:3000
    healthcheck:
      test: curl --fail http://localhost:5173 || exit 1
    ports: ["5173:5173"]
    volumes: ["./frontend:/app", "/app/node_modules"]

  caddy:
    container_name: caddy
    profiles: ["caddy"]
    build: ./frontend
    environment:
      NODE_ENV: development
      PORT: 3000
      BACKEND_URL: http://backend:3000
      LOG_LEVEL: info
    ports: ["3005:3000"]
    volumes: ["./frontend/Caddyfile:/etc/caddy/Caddyfile"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005"]
    depends_on:
      backend:
        condition: service_healthy
