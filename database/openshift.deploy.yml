apiVersion: template.openshift.io/v1
kind: Template
parameters:
  - name: APP
    description: Application name
    value: nr-nmp
  - name: COMPONENT
    description: Component name
    value: database
  - name: ORG
    description: Organization name; e.g. bcgov or bcdevops
    value: bcgov
  - name: TARGET
    description: Deployment target; e.g. PR number, test or prod
    required: true
  - name: IMAGE_TAG
    description: Image tag; e.g. PR number or latest
    required: true
  - name: NAME_SUFFIX
    description: Suffix for the name
    required: true
objects:
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-from-openshift-ingress
      labels:
        template: openshift-test
    spec:
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      policyTypes:
        - Ingress
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-same-namespace
      labels:
        template: nr-spar-backend-network-security-policy
    spec:
      policyTypes:
        - Ingress
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: nr-nmp-database${NAME_SUFFIX}
      labels:
        app: nr-nmp${NAME_SUFFIX}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 128Mi
      storageClassName: netapp-file-standard
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: nr-nmp-database${NAME_SUFFIX}
      labels:
        app: nr-nmp${NAME_SUFFIX}
    spec:
      replicas: 1
      selector:
        matchLabels:
          deployment: nr-nmp-database${NAME_SUFFIX}
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
        activeDeadlineSeconds: 21600
      template:
        metadata:
          name: nr-nmp-database${NAME_SUFFIX}
          labels:
            app: nr-nmp${NAME_SUFFIX}
            deployment: nr-nmp-database${NAME_SUFFIX}
        spec:
          volumes:
            - name: nr-nmp-database${NAME_SUFFIX}
              persistentVolumeClaim:
                claimName: nr-nmp-database${NAME_SUFFIX}
          containers:
            - name: nr-nmp${NAME_SUFFIX}
              image: ghcr.io/bcgov/nr-nmp/database:${IMAGE_TAG}
              ports:
                - containerPort: 5432
                  protocol: TCP
              resources:
                requests:
                  cpu: 50m
                  memory: 150Mi
                limits:
                  cpu: 115m
                  memory: 250Mi
              readinessProbe:
                exec:
                  command:
                    - /usr/bin/env
                    - bash
                    - "-c"
                    - psql -q -U $POSTGRES_USER -d $POSTGRES_DB -c 'SELECT 1'
                successThreshold: 1
                failureThreshold: 5
                initialDelaySeconds: 10
                periodSeconds: 15
                timeoutSeconds: 10
              livenessProbe:
                exec:
                  command:
                    - /usr/bin/env
                    - bash
                    - "-c"
                    - psql -q $POSTGRES_USER -d $POSTGRES_DB -c 'SELECT 1'
                successThreshold: 1
                failureThreshold: 5
                initialDelaySeconds: 10
                periodSeconds: 15
                timeoutSeconds: 10
              env:
                - name: POSTGRES_DB
                  valueFrom:
                    secretKeyRef:
                      name: nr-nmp-database${NAME_SUFFIX}
                      key: database-name
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: nr-nmp-database${NAME_SUFFIX}
                      key: database-password
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: nr-nmp-database${NAME_SUFFIX}
                      key: database-user
              volumeMounts:
                - name: nr-nmp-database${NAME_SUFFIX}
                  mountPath: "/var/lib/postgresql"
              terminationMessagePath: "/dev/termination-log"
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          schedulerName: default-scheduler
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: nr-nmp${NAME_SUFFIX}
      name: nr-nmp-database${NAME_SUFFIX}
    spec:
      ports:
        - name: postgresql
          nodePort: 0
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        deployment: nr-nmp-database${NAME_SUFFIX}
      sessionAffinity: None
      type: ClusterIP
